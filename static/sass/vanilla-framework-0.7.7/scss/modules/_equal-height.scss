////
/// @author       Web Team at Canonical Ltd
/// @link         http://ubuntudesign.github.io/vanilla-framework/docs/#utils-mixin-vf-equal-height
/// @since        0.0.13
////

/// Equal heights makes all immediate child divs and li's heights equal
/// @group Utils
/// @example
///   <div class="row equal-height">
///     <div class="six-col equal-height__item">...</div>
///     <div class="six-col last-col equal-height__item">...</div>
///   </div>
@mixin vf-equal-heights {
  @include vf-equal-height;
  @include vf-vertical-divider;
}

@mixin vf-equal-height {
  .equal-height {
    @extend %equal-height;
  }

  @include vf-align-vertically();
}

/// Sets the element to center an inner element vertically. Has to be used in conjunction with equal-height and if it's an image it'll need align-center, too.
/// @group Utils
/// @example
///   <div class="row equal-height">
///     <div class="eight-col">...</div>
///     <div class="four-col align-vertically align-center last-col">
///       <img src="love-orange.svg" alt="" />
///     </div>
///   </div>
@mixin vf-align-vertically {
  @media only screen and (min-width : $breakpoint-medium) {
    .equal-height__align-vertically {
      align-items: center;
      justify-content: center;
    }
  }
}

/// Vertical divider applies a vertical divider between columns inside parent
/// @group Utils
/// @example
///   <div class="row equal-height--vertical-divider">
///     <div class="six-col equal-height--vertical-divider__item">...</div>
///   <div class="six-col last-col equal-height--vertical-divider__item">...</div>
///   </div>
@mixin vf-vertical-divider {
  .equal-height--vertical-divider {
    @extend %equal-height;

    @media only screen and (min-width : $breakpoint-medium) {
      position: relative;

      &__item {
        padding-left: ($gutter-width / 2);
        padding-right: ($gutter-width / 2);

        &:before {
          content: '';
          position: absolute;
          right: -($gutter-width / 2);
          top: 0;
          height: 100%;
          width: 1px;
          border-right: 1px dotted $warm-grey;
        }
      }

      .last-col,
      &__item:last-of-type {
        padding-right: 0;

        &:before {
          border-right: 0;
        }
      }

      &__item:first-of-type {
        padding-left: 0;
      }
    }

    @media only screen and (max-width : $breakpoint-medium) {
      .equal-height--vertical-divider {
        &__item {
          border-bottom: 1px dotted $warm-grey;
          padding-bottom: 20px;
        }

        &__item:last-of-type {
          border-bottom: 0;
          padding-bottom: inherit;
        }
      }
    }
  }
}

/// Default equal-height pattern styles
/// @group Utils
%equal-height {
  @media only screen and (min-width : $breakpoint-medium) {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    width: 100%;

    .equal-height__item {
      display: flex;
      flex: auto;
      flex-direction: column;
    }
  }
}
